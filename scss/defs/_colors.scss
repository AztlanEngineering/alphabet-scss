@use "../functions" as *; //Legacy, new version without as

@import "../vars/colors";

@mixin define-variables($array) {
  @each $name, $subarray in $array {
    @each $variant, $value in $subarray {
      @if $variant == "base" {
        --#{$name}: #{$value};
      }
      @else {
        --#{$variant}-#{$name}: #{$value};
      }
    }
  }
}

//
//Private variables
//


//
//Setters
//
//


@mixin setterFromMap($array) {
  @each $name, $subarray in $array {
    @each $prefix in $prefixes-setters {
      .#{$prefix}-#{$name},
      .#{$prefix}#{$prefix-hover}-#{$name}:focus,
      .#{$prefix}#{$prefix-hover}-#{$name}:hover {
        --#{$prefix}: var(--#{$name});
        --light-#{$prefix}: var(--light-#{$name});
        --dark-#{$prefix}: var(--dark-#{$name});
        --on-#{$prefix}: var(--on-#{$name});
      }
    }
  }
}

@mixin getters {
  $variants:"","light","dark","on";

  @each $register in $prefixes-setters {
    @each $variant in $variants {
      @if $variant == "" {
        @include getterFactory($getter-background,$register,("background"));
        @include getterFactory($getter-color-stroke, $register,("color", "stroke"));
        @include getterFactory($getter-border,$register,("border-color"));
        @include getterFactory($getter-fill,$register,("fill"));
      }
      @else {
        $v:"#{$variant}-#{$register}";

        @include getterFactory($getter-background,$v,("background"));
        @include getterFactory($getter-color-stroke, $v,("color", "stroke"));
        @include getterFactory($getter-fill,$v,("fill"));
      }
    }
  }
}

//
//Getters
//
