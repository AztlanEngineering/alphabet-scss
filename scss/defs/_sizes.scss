@use "../functions" as fn;
@import "../vars/sizes";

// Set Base Variables


@mixin define-variables(
  $map:$size-multipliers-map,
) {
  @each $size, $multiple in $map {
    --s#{$size}: #{$multiple};
  }

  --emsize: #{$base-size};
  --emsize-sm: #{$base-size-small};
  --rl: #{$borderRadiusLeft};
  --rr: #{$borderRadiusRight};
  --rt: #{$borderRadiusTop};
  --rb: #{$borderRadiusBottom};
  --r: #{$borderRadiusGeneral};
}

@mixin setterTextSizes(
  $map:$size-multipliers-map,
  $prefixes:$prefixes-setters-text-sizes
) {
  @each $size, $multiple in $map {
    @each $prefix in $prefixes {
      .#{$prefix}#{$size} {
        --#{$prefix}: #{$multiple};
      }
    }
  }
}

@mixin setterNormalSizes(
  $map:$sizes-list,
  $prefixes:$prefixes-setters-block-sizes
) {
  @each $size, $multiple in $map {
    @each $prefix in $prefixes {
      @if $size <= 1 {
        .#{$prefix}#{$size * 100} {
          --#{$prefix}: #{$size};
        }
      } @else {
        .#{$prefix}#{$size} {
          --#{$prefix}: #{$size};
        }
      }
    }
  }
}

// Set Getters
@mixin getterFactorySizes($prefix,$var-name,$properties, $unit) {
  .#{$prefix}#{$var-name} {
    @each $property in $properties {
      #{$property}: calc(var(--#{$var-name}) * #{$unit});
    }
  }
}

@mixin getterFactoryCoords($prefix,$var-name) {
  $rect:(
    top:t,
    bottom:b,
    left:l,
    right:r,
  );

  @each $side, $prefix-side in $rect {
    .#{$prefix}#{$prefix-side}#{$var-name} {
      #{$side}: calc(var(--#{$var-name}) * 1em);
    }
  }
}

@mixin getterFactoryRect($prefix,$var-name,$property, $factor) {
  $rect:(
    top:t,
    bottom:b,
    left:l,
    right:r,
  );
  $prefix-horizontal:h;
  $prefix-vertical:v;

  @each $side, $prefix-side in $rect {
    .#{$prefix}#{$prefix-side}#{$var-name} {
      #{$property}-#{$side}: calc(var(--#{$var-name}) * #{$factor});
    }
  }

  .#{$prefix}#{$prefix-horizontal}#{$var-name} {
    #{$property}-left: calc(var(--#{$var-name}) * #{$factor});
    #{$property}-right: calc(var(--#{$var-name}) * #{$factor});
  }

  .#{$prefix}#{$prefix-vertical}#{$var-name} {
    #{$property}-top: calc(var(--#{$var-name}) * #{$factor});
    #{$property}-bottom: calc(var(--#{$var-name}) * #{$factor});
  }

  .#{$prefix}#{$var-name} {
    #{$property}: calc(var(--#{$var-name}) * #{$factor});
  }
}

@mixin getters(
  $prefixes-text:$prefixes-setters-text-sizes,
  $prefixes-dimensions:$prefixes-setters-block-sizes,
) {
  @each $register in $prefixes-text {
    @include getterFactorySizes($getter-text-size-relative, $register, ("font-size"), "1em");
    @include getterFactorySizes($getter-text-size-absolute, $register, ("font-size"), "1em");
  }

  @each $register in $prefixes-dimensions {
    @include getterFactoryCoords($getter-coordinates, $register);
    @include getterFactoryRect($getter-size-margin, $register, ("margin"), "1rem");
    @include getterFactoryRect($getter-size-padding, $register, ("padding"), "1rem");
    @include getterFactoryRect($getter-size-border-radius, $register, ("border-radius"), "1rem");
  }
}


