/*---  Fixed ---*/

.row
{
  width:100%;
}

/*--- Base Grid ---*/

.w
{
  display:grid;
  grid-template-columns:repeat($gridColumns, 1fr);

  > *
  {
    grid-column-end:span $gridColumns;
  }
}

/*--- Responsive  ---*/

@mixin columns($suffix:false, $from:false)
{
  @include media($from:$from)
  {
    @for $i from 1 through $gridColumns
    {
      .w#{$i}-#{$suffix}
      {
        grid-column-end:span $i;
      }
    }
  }
}


// Columns normal (not responsive)
@for $i from 1 through $gridColumns
{
  .w#{$i}
  {
    grid-column-end:span $i;
  }
}
//@include columns('xs' );
@include columns('sm', $from:$xs-sm);
@include columns('md', $from:$sm-md);
@include columns('lg', $from:$md-lg);


@mixin grid-gap-code($current, $name)
{
  .gh#{$name}
  {
    grid-column-gap:#{$current}rem;
  }
  .gv#{$name}
  {
    grid-row-gap:#{$current}rem;
  }
  .g#{$name}
  {
    grid-gap:#{$current}rem;
  }
}

@mixin grid-gap
{
  @for $i from 1 through $gridGapIterations
  {
    $current:$i;

    @include grid-gap-code($current:$current, $name:$current);
  }
  @include grid-gap-code($current:.5, $name:'05')
  @include grid-gap-code($current:.2, $name:'02');
  //@include grid-gap-code($current:.1, $name:'01');
}
@include grid-gap;
