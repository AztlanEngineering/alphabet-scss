/*

Text styles

.nt : no style
.tl : lighter
.tb : bold
.ti : italic
.tn : oldstyle number
.tu : uppercase
.tw : lowercase
.ts : text with stroke
.tsm : small caps (only on otf files featuring it)
.to : most open type features for content (ligatures))
.tos : oldstyle numbers
.tls : high letter spacing
.nd : no decoration
.ndh : no decoration (hover)

Paragraph styles

.uc : center
.ul : left
.ur : right
.uj : justified
.uc-xs : center for xs or less,
.ul-md : center for md or less,

HTML Styles

HTML : h1, h2, h3, h4, h5, h6, small, p, a, b,
Custom : .h1, .h2, .h3, .h4, .h5, .h6, .small, .p

Other

.s-size
.r-size
do not mix with .sm

*/

.nt {
    font-weight: normal;
    font-style: normal;
}

.tl {
    font-weight: lighter;
}

.tb {
    font-weight: bold;
}

.ti {
    font-style: italic;
}

.tu {
    text-transform: uppercase;
}

.tv {
    text-decoration: underline;
}

.tw {
    text-transform: lowercase;
}

.tsm {
    font-feature-settings: "smcp" 1;
}

.ts {
    color: transparent;
    -webkit-text-stroke: $textStrokeWidth var(--cc, #{$default});
    text-stroke: $textStrokeWidth var(--cc, #{$default});
}


.tls {
    letter-spacing: $textLetterSpacingHigh;
}

.to {
    font-feature-settings:"onum" $textOpenTypeOnum,
  "kern" $textOpenTypeKern,
  "liga" $textOpenTypeLiga,
  "dlig" $textOpenTypeDlig,
  "hlig" $textOpenTypeHlig,
  "clig" $textOpenTypeClig;
}

.tos {
    font-feature-settings: "onum" 1,;
}

.tn {
    font-feature-settings: "onum" 1;
}

@each $n, $c in $cSizes {
    &.s-#{$n} {
        font-size: var(--#{$n});
    }
}

@each $n, $c in $cRelativeSizes {
    &.r-#{$n} {
        font-size: var(--r-#{$n});
    }
}

/* --- --- */
h1,
h2,
h3,
h4,
h5,
.h1,
.h2,
.h3,
.h4,
.h5 {
    margin: $textMarginHeaders;
    padding: 0;
    line-height: $textLineHeightHeaders;
    font-family: $fontHeaders;
    font-weight: $fontWeightHeaders;

    p + & {
        margin-top: $textMarginHeadersSpacing;
    }
}

h1,
.h1 {
    min-height: 1rem;
    font-size: $h1;
}

h2,
.h2,
h1.#{$smallClassName},
.h1.#{$smallClassName},
.#{$smallHeadersInClass} h1,
.#{$smallHeadersInClass} .h1 {
    font-size: $h2;
}

h3,
.h3,
h2.#{$smallClassName},
.h2.#{$smallClassName},
.#{$smallHeadersInClass} h2,
.#{$smallHeadersInClass} .h2 {
    font-size: $h3;
}

h4,
.h4,
h3.#{$smallClassName},
.h3.#{$smallClassName},
.#{$smallHeadersInClass} h3,
.#{$smallHeadersInClass} .h3 {
    font-size: $h4;
}

h5,
.h5,
h4.#{$smallClassName},
.h4.#{$smallClassName},
.#{$smallHeadersInClass} h4,
.#{$smallHeadersInClass} .h4 {
    font-size: $h5;
}

small,
.#{$smallClassName} {
    font-size: var(--r-sm);
}

h1:first-child,
h2:first-child,
h3:first-child,
h4:first-child,
h5:first-child {
    margin-top: 0;
}

h1:last-child,
h2:last-child,
h3:last-child,
h4:last-child,
h5:last-child {
    margin-bottom: 0;
}

/* --- ParagraphText --- */

p,
ul,
ol {
    line-height: $textLineHeightParagraph;
    font-size: $textSizeParagraph;
}

p,
li {
    margin: $textMarginParagraph;
    orphans: $paragraphOrphans;
    widows: $paragraphWidows;
}

p:first-child {
    margin-top: 0;
}

p:last-child {
    margin-bottom: 0;
}

blockquote {
    position: relative;
    //$blockquoteBeforeChar:'â€œ';
    padding-left: $blockquoteLeftPadding;
    font-size: $blockquoteFontSize;
    font-style: $blockquoteFontStyle;

    & + *:not(figcaption) {
        margin-top: $blockquoteMarginBottom;
    }

    & + figcaption {
        margin-top: 1em;
        padding-right: $blockquoteAuthorMarginRight;
        font-size: $blockquoteAuthorFontSize;

        &::before {
            margin-right: $blockquoteAuthorBeforeMarginRight;
            content: $blockquoteAuthorBeforeChar;
        }
    }

    &::before {
        position: absolute;
        top: $blockquoteBeforeTop;
        left: $blockquoteBeforeLeft;
        opacity: $blockquoteBeforeOpacity;
        z-index: -1;
        color: $blockquoteBeforeColor;
        font-size: $blockquoteBeforeSize;
        font-style: normal;
        content: $blockquoteBeforeChar;
    }
}

/* --- Links --- */

a {
    text-decoration: $linkUnderline;
    color: $linkColor;
}

a:hover {
    text-decoration: $linkHoverUnderline;
    color: $linkHoverColor;
}

@include responsive(ul) {
    text-align: left;
}

@include responsive(ur) {
    text-align: right;
}

@include responsive(uc) {
    text-align: center;
}

@include responsive(uj) {
    text-align: justify;
}
